services:
  redis:
    container_name: redis
    image: redis/redis-stack-server:latest
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis-data:/data
    environment:
      - REDIS_ARGS=--appendonly yes
    profiles:
      - internal-redis

  postgres:
    container_name: postgres
    image: pgvector/pgvector:pg17
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-ragpi}
    profiles:
      - internal-postgres

  api:
    container_name: api
    image: ragpi/ragpi:${API_VERSION:-latest}
    ports:
      - "8000:8000"
    environment:
      # Use the REDIS_URL env var if available or default to the internal redis container.
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      # Use the POSTGRES_URL env var if available or default to the internal postgres container.
      - POSTGRES_URL=${POSTGRES_URL:-postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-ragpi}}
    env_file: .env

  task-worker:
    container_name: task-worker
    image: ragpi/ragpi:${API_VERSION:-latest}
    command: celery --app=src.celery.celery_app worker --concurrency=2 --max-tasks-per-child=1 --loglevel=INFO
    environment:
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - POSTGRES_URL=${POSTGRES_URL:-postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-ragpi}}
    env_file: .env

volumes:
  redis-data:
  postgres-data: