services:
  redis:
    container_name: redis
    image: redis/redis-stack-server:latest
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis-data:/data
    environment:
      - REDIS_ARGS=--appendonly yes

  postgres:
    container_name: postgres
    image: pgvector/pgvector:pg17
    ports: 
      - "127.0.0.1:5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-ragpi}

  api:
    container_name: api
    image: ragpi/ragpi:${RAGPI_API_VERSION:-latest}
    ports:
      - "${DOCKER_API_PORT_MAPPING:-127.0.0.1:8000:8000}"
    environment:
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-ragpi}
    env_file: .env

  task-worker:
    container_name: task-worker
    image: ragpi/ragpi:${RAGPI_API_VERSION:-latest}
    command: celery --app=src.celery.celery_app worker --concurrency=2 --max-tasks-per-child=1 --loglevel=INFO
    environment:
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-ragpi}
    env_file: .env

  discord:
    container_name: discord
    image: ragpi/ragpi-discord:${RAGPI_DISCORD_VERSION:-latest}
    environment:
      - RAGPI_BASE_URL=http://api:8000
    env_file: .env
    profiles:
      - discord

volumes:
  redis-data:
  postgres-data: